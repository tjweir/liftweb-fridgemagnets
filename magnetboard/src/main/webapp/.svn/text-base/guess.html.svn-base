<lift:surround with="default" at="content">
<lift:snippet type="CountGame:run" form="POST">
  <choose:guess>
    Guess a number between 1 and 100.<br/>
    Last guess: <count:last/><br />
    Guess: <count:input/><br/>
    <input type="submit" value="Guess"/>
  </choose:guess>

  <choose:win>
    You Win!!<br />
    You guessed <count:number/> after <count:count/> guesses.<br/>
  </choose:win>
</lift:snippet>

<br />
<br />
The view code:

    <style type="text/css">
    <![CDATA[
      .function-name {
        /* font-lock-function-name-face */
        color: #0000ff;
      }
      .sgml-namespace {
        /* sgml-namespace */
        color: #da70d6;
      }
      .string {
        /* font-lock-string-face */
        color: #bc8f8f;
      }
      .variable-name {
        /* font-lock-variable-name-face */
        color: #b8860b;
      }
      ]]>
    </style>
    <pre>
&lt;<span class="sgml-namespace">lift</span>:<span class="function-name">surround</span> <span class="variable-name">with</span>=<span class="string">"default"</span> <span class="variable-name">at</span>=<span class="string">"content"</span>&gt;
&lt;<span class="sgml-namespace">lift</span>:<span class="function-name">snippet</span> <span class="variable-name">type</span>=<span class="string">"CountGame:run"</span> <span class="variable-name">form</span>=<span class="string">"POST"</span>&gt;
  &lt;<span class="sgml-namespace">choose</span>:<span class="function-name">guess</span>&gt;
    Guess a number between 1 and 100.&lt;<span class="function-name">br</span>/&gt;
    Last guess: &lt;<span class="sgml-namespace">count</span>:<span class="function-name">last</span>/&gt;&lt;<span class="function-name">br</span> /&gt;
    Guess: &lt;<span class="sgml-namespace">count</span>:<span class="function-name">input</span>/&gt;&lt;<span class="function-name">br</span>/&gt;
    &lt;<span class="function-name">input</span> <span class="variable-name">type</span>=<span class="string">"submit"</span> <span class="variable-name">value</span>=<span class="string">"Guess"</span>/&gt;
  &lt;/<span class="sgml-namespace">choose</span>:<span class="function-name">guess</span>&gt;

  &lt;<span class="sgml-namespace">choose</span>:<span class="function-name">win</span>&gt;
    You Win!!&lt;<span class="function-name">br</span> /&gt;
    You guessed &lt;<span class="sgml-namespace">count</span>:<span class="function-name">number</span>/&gt; after &lt;<span class="sgml-namespace">count</span>:<span class="function-name">count</span>/&gt; guesses.&lt;<span class="function-name">br</span>/&gt;
  &lt;/<span class="sgml-namespace">choose</span>:<span class="function-name">win</span>&gt;
&lt;/<span class="sgml-namespace">lift</span>:<span class="function-name">snippet</span>&gt;
&lt;/<span class="sgml-namespace">lift</span>:<span class="function-name">surround</span>&gt;
</pre>

The Snippet:
    <style type="text/css">
    <![CDATA[

      .comment {
        /* font-lock-comment-face */
        color: #b22222;
      }
      .comment-delimiter {
        /* font-lock-comment-delimiter-face */
        color: #b22222;
      }
      .function-name {
        /* font-lock-function-name-face */
        color: #0000ff;
      }
      .keyword {
        /* font-lock-keyword-face */
        color: #a020f0;
      }
      .string {
        /* font-lock-string-face */
        color: #bc8f8f;
      }
      .type {
        /* font-lock-type-face */
        color: #228b22;
      }
      .variable-name {
        /* font-lock-variable-name-face */
        color: #b8860b;
      }
      ]]>
    </style>
    <pre>
<span class="keyword">class</span> <span class="type">CountGame</span> <span class="keyword">extends</span> <span class="type">StatefulSnippet</span> {
  <span class="keyword">val</span> <span class="variable-name">dispatch</span>: <span class="type">DispatchIt </span>= {
    <span class="keyword">case</span> <span class="string">"run"</span> <span class="keyword">if</span> lastGuess == number =&gt; 
      xhtml =&gt; win(chooseTemplate(<span class="string">"choose"</span>, <span class="string">"win"</span>, xhtml))
    
    <span class="keyword">case</span> <span class="string">"run"</span> =&gt; 
      xhtml =&gt; nextGuess(chooseTemplate(<span class="string">"choose"</span>, <span class="string">"guess"</span>, xhtml))
  }
  
  <span class="keyword">def</span> <span class="function-name">win</span>(<span class="variable-name">xhtml</span>: <span class="type">NodeSeq</span>) = bind(<span class="string">"count"</span>, xhtml, <span class="string">"number"</span> --&gt; number, 
                                 <span class="string">"count"</span> --&gt; count)
  
  <span class="keyword">def</span> <span class="function-name">nextGuess</span>(<span class="variable-name">xhtml</span>: <span class="type">NodeSeq</span>) =  bind(<span class="string">"count"</span>, xhtml, 
                                        <span class="string">"input"</span> --&gt; text(<span class="string">""</span>, guess _),
                                        <span class="string">"last"</span> --&gt; 
                                        lastGuess.map(v =&gt; 
                                          <span class="keyword">if</span> (v &lt; number) v+<span class="string">" is low"</span> 
                                          <span class="keyword">else</span> v+<span class="string">" is high"</span>).
                                        openOr(<span class="string">"Make first Guess"</span>))
  
  <span class="keyword">private</span> <span class="keyword">def</span> <span class="function-name">guess</span>(<span class="variable-name">in</span>: <span class="type">String</span>) {
    count += 1
    lastGuess = Full(toInt(in))
  }
    
  <span class="keyword">private</span> <span class="keyword">val</span> <span class="variable-name">number</span> = 1 + randomInt(100)
  <span class="keyword">private</span> <span class="keyword">var</span> <span class="variable-name">lastGuess</span>: <span class="type">Can[Int]</span> = Empty
  <span class="keyword">private</span> <span class="keyword">var</span> <span class="variable-name">count</span> = 0
}
</pre>


</lift:surround>
